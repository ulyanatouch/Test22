HomeWork1
1.Чтобы скопировать репозиторий на свой компьютер надо зайти на страницу репозитория
 который хочу скопировать, нажать кнопку Code, скопировать url, 
на своем компе открыть командную строку или терминал, 
перейти в каталог в который я хочу скопировать репозиторий с поощью команды cd
и выполнить команду git clone <ссылка на реп>. 
2. чтобы создать гит репозиторий из каталога на компе надо сначала перейти в этот каталог, 
открыть например git bush, привести процесс в состояние готовности с помощью кода git init,
 далее добавить файлы проэкта с помощью команды git add,
 если никаких ошибок нет, то далее создаем коммит с добавленными файлами
 командой git commit -m initial commit со стандартным комментарием, 
далее можно провериить нет ли удаленного репо git remote -v, 
и уже можно создать репо на гите и выполнить рекомендации гита: git remote add origin <ssh>,
 git branch -m main , git push -u origin main. 
3. чтобы получить изменения с гита на свой комп, 
надо через гит баш перейти в каталог репо и выполнить команду git pull origin <main>. 
4. git status - покажет что в таком то каталоге изменился файл, 
git log - эта команда показывает историю коммитов в репозитории, 
git remote -v -эта команда показывает список удаленных репозиториев

HomeWork2
1.Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?

git restore . или git checkout . (или один конкретный файл)
git clean -x (игнорируем правила гитигнор) d- удалять все вложенные директории f- форсе (сила)
Лучше сначала использовать git clean -ndx

2.Как вернуть файл из индекса в рабочий каталог?

git reset --soft  - вернет фыйлы в индех.
вызывается с флагом --mixed - возвращает файлы в рабочую директорию.

3.Как отменить ошибочный commit ?

git reset HEAD~

4.Как исправить коммит отправленный на сервер GitHub?

чуть больше про git reset --soft  - вернет фыйлы в индекс
 --mixed - возвращает файлы в рабочую директорию
gig reset --hard - удалит безвозвратно коммит

5.Как создать новую ветку и переключится в нее?
git branch test   (для переключения сразу git checkout -b test )
git checkout test

5.В чем отличение между fast-forward merge  and non fast-forfard merge?
быстрое и не быстрое слияние веток
fast-forward merge происходиткогда изменения в ветке можно просто добавить к базовой ветке без создания дополнительного коммита слияния
 non-fast-forward merge создает дополнительный коммит даже если нет конфликтов чтобы сохранить историю изменений в ветке

6.Когда может возникнуть конфликт слияния веток, как  его разрешить?

когда вносят изменения в один и тот же файл или удаляют один и тот же файл в разных ветках

7.Можно ли удалить ветку? Как? 

git branch -d test
